spring.shardingsphere.enabled=true
## datasource
spring.shardingsphere.datasource.names=ds-0,ds-1
spring.shardingsphere.props.sql.show=true
spring.shardingsphere.props.query.with.cipher.column=true
## ds0
spring.shardingsphere.datasource.ds-0.type=${spring.datasource.type}
spring.shardingsphere.datasource.ds-0.driver-class-name=${spring.datasource.driver-class-name}
spring.shardingsphere.datasource.ds-0.jdbc-url=jdbc:mysql://sql.wsfdb.cn:3306/ikkiimmigrant0?useUnicode=true&characterEncoding=utf8&allowMultiQueries=true&useSSL=false
spring.shardingsphere.datasource.ds-0.username=ikkiimmigrant0
spring.shardingsphere.datasource.ds-0.password=${spring.datasource.password}
## ds1
spring.shardingsphere.datasource.ds-1.type=${spring.datasource.type}
spring.shardingsphere.datasource.ds-1.driver-class-name=${spring.datasource.driver-class-name}
spring.shardingsphere.datasource.ds-1.jdbc-url=jdbc:mysql://sql.wsfdb.cn:3306/ikkiimmigrant1?useUnicode=true&characterEncoding=utf8&allowMultiQueries=true&useSSL=false
spring.shardingsphere.datasource.ds-1.username=ikkiimmigrant1
spring.shardingsphere.datasource.ds-1.password=${spring.datasource.password}
## default
spring.shardingsphere.sharding.default-database-strategy.inline.sharding-column=id
spring.shardingsphere.sharding.default-database-strategy.inline.algorithm-expression=ds$->{id % 2}
#spring.shardingsphere.sharding.default-key-generator.type=SNOWFLAKE
#spring.shardingsphere.sharding.default-key-generator.column=id
#spring.shardingsphere.sharding.default-key-generator.props.worker.id=${random.int[1,1024]}
## sharding rule
spring.shardingsphere.sharding.tables.subject_credentials.actual-data-nodes=ds-$->{0..1}.subject_credentials
spring.shardingsphere.sharding.tables.subject_credentials.database-strategy.inline.sharding-column=uid
spring.shardingsphere.sharding.tables.subject_credentials.database-strategy.inline.algorithm-expression=ds-$->{uid % 2}
spring.shardingsphere.sharding.tables.subject_credentials.key-generator.column=uid
spring.shardingsphere.sharding.tables.subject_credentials.key-generator.type=SNOWFLAKE
#
spring.shardingsphere.sharding.tables.customer.actual-data-nodes=ds-$->{0..1}.customer
spring.shardingsphere.sharding.tables.customer.database-strategy.inline.sharding-column=id
spring.shardingsphere.sharding.tables.customer.database-strategy.inline.algorithm-expression=ds-$->{id % 2}
spring.shardingsphere.sharding.tables.customer.key-generator.column=id
spring.shardingsphere.sharding.tables.customer.key-generator.type=SNOWFLAKE
## AES cipher
spring.shardingsphere.sharding.encrypt-rule.encryptors.cipher.type=AES
spring.shardingsphere.sharding.encrypt-rule.encryptors.cipher.props.aes.key.value=Secret
### cipher column
spring.shardingsphere.sharding.encrypt-rule.tables.subject_credentials.columns.phone.encryptor=cipher
spring.shardingsphere.sharding.encrypt-rule.tables.subject_credentials.columns.phone.cipherColumn=phone
spring.shardingsphere.sharding.encrypt-rule.tables.subject_credentials.columns.email.encryptor=cipher
spring.shardingsphere.sharding.encrypt-rule.tables.subject_credentials.columns.email.cipherColumn=email