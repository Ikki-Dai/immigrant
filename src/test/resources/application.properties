spring.sql.init.schema-locations=classpath*:db/migration/V2__CreateTable.sql
spring.datasource.url=jdbc:h2:mem:immigrant;MODE=MYSQL;DATABASE_TO_LOWER=TRUE;CASE_INSENSITIVE_IDENTIFIERS=TRUE
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.type=com.zaxxer.hikari.HikariDataSource
#
spring.data.redis.repositories.enabled=false
#
logging.level.org.springframework.jdbc.core.JdbcTemplate=DEBUG
spring.shardingsphere.enabled=false
## datasource
spring.shardingsphere.datasource.names=ds-0,ds-1
spring.shardingsphere.props.sql.show=true
spring.shardingsphere.props.query.with.cipher.column=true
## ds0
spring.shardingsphere.datasource.ds-0.type=${spring.datasource.type}
spring.shardingsphere.datasource.ds-0.driver-class-name=${spring.datasource.driver-class-name}
spring.shardingsphere.datasource.ds-0.jdbc-url=${spring.datasource.url}
#spring.shardingsphere.datasource.ds-0.username=ikkiimmigrant0
#spring.shardingsphere.datasource.ds-0.password=${spring.datasource.password}
## ds1
spring.shardingsphere.datasource.ds-1.type=${spring.datasource.type}
spring.shardingsphere.datasource.ds-1.driver-class-name=${spring.datasource.driver-class-name}
spring.shardingsphere.datasource.ds-1.jdbc-url=${spring.datasource.url}
#spring.shardingsphere.datasource.ds-1.username=ikkiimmigrant1
#spring.shardingsphere.datasource.ds-1.password=${spring.datasource.password}
## default
spring.shardingsphere.sharding.default-database-strategy.inline.sharding-column=id
spring.shardingsphere.sharding.default-database-strategy.inline.algorithm-expression=ds$->{id % 2}
#spring.shardingsphere.sharding.default-key-generator.type=SNOWFLAKE
#spring.shardingsphere.sharding.default-key-generator.column=id
#spring.shardingsphere.sharding.default-key-generator.props.worker.id=${random.int[1,1024]}
## sharding rule
spring.shardingsphere.sharding.tables.subject.actual-data-nodes=ds-$->{0..1}.subject
spring.shardingsphere.sharding.tables.subject.database-strategy.inline.sharding-column=uid
spring.shardingsphere.sharding.tables.subject.database-strategy.inline.algorithm-expression=ds-$->{uid % 2}
spring.shardingsphere.sharding.tables.subject.key-generator.column=uid
spring.shardingsphere.sharding.tables.subject.key-generator.type=SNOWFLAKE
#
spring.shardingsphere.sharding.tables.credentials.actual-data-nodes=ds-$->{0..1}.credentials
spring.shardingsphere.sharding.tables.credentials.database-strategy.inline.sharding-column=id
spring.shardingsphere.sharding.tables.credentials.database-strategy.inline.algorithm-expression=ds-$->{id % 2}
spring.shardingsphere.sharding.tables.credentials.key-generator.column=id
spring.shardingsphere.sharding.tables.credentials.key-generator.type=SNOWFLAKE
#
spring.shardingsphere.sharding.tables.customer.actual-data-nodes=ds-$->{0..1}.customer
spring.shardingsphere.sharding.tables.customer.database-strategy.inline.sharding-column=id
spring.shardingsphere.sharding.tables.customer.database-strategy.inline.algorithm-expression=ds-$->{id % 2}
spring.shardingsphere.sharding.tables.customer.key-generator.column=id
spring.shardingsphere.sharding.tables.customer.key-generator.type=SNOWFLAKE
## AES cipher
spring.shardingsphere.sharding.encrypt-rule.encryptors.cipher.type=AES
spring.shardingsphere.sharding.encrypt-rule.encryptors.cipher.props.aes.key.value=Secret
### cipher column
spring.shardingsphere.sharding.encrypt-rule.tables.subject.columns.phone.encryptor=cipher
spring.shardingsphere.sharding.encrypt-rule.tables.subject.columns.phone.cipherColumn=phone
spring.shardingsphere.sharding.encrypt-rule.tables.subject.columns.email.encryptor=cipher
spring.shardingsphere.sharding.encrypt-rule.tables.subject.columns.email.cipherColumn=email